new entry "BONUSPROFICIENCIES_SAVINGTHROW_FIRST"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "BONUSPROFICIENCIES_SAVINGTHROW_FIRST"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting"

new entry "BONUSPROFICIENCIES_SAVINGTHROW_STRENGTH"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "Bonus Proficiencies: Strength Saving Throws"
data "StackId" "BONUSPROFICIENCIES_SAVINGTHROW_STRENGTH"
data "OnApplyFunctors" "ApplyStatus(BONUSPROFICIENCIES_SAVINGTHROW_FIRST,100,-1)"
data "Boosts" "ProficiencyBonus(SavingThrow,Strength)"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting"

new entry "BONUSPROFICIENCIES_SAVINGTHROW_DEXTERITY"
type "StatusData"
data "StatusType" "BOOST"
using "BONUSPROFICIENCIES_SAVINGTHROW_STRENGTH"
data "DisplayName" "Bonus Proficiencies: Dexterity Saving Throws"
data "StackId" "BONUSPROFICIENCIES_SAVINGTHROW_DEXTERITY"
data "Boosts" "ProficiencyBonus(SavingThrow,Dexterity)"

new entry "BONUSPROFICIENCIES_SAVINGTHROW_CONSTITUTION"
type "StatusData"
data "StatusType" "BOOST"
using "BONUSPROFICIENCIES_SAVINGTHROW_STRENGTH"
data "DisplayName" "Bonus Proficiencies: Constitution Saving Throws"
data "StackId" "BONUSPROFICIENCIES_SAVINGTHROW_CONSTITUTION"
data "Boosts" "ProficiencyBonus(SavingThrow,Constitution)"

new entry "BONUSPROFICIENCIES_SKILL_FIRST"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "BONUSPROFICIENCIES_SKILL_FIRST"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting"

new entry "BONUSPROFICIENCIES_SKILL_SECOND"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "BONUSPROFICIENCIES_SKILL_SECOND"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting"

new entry "BONUSPROFICIENCIES_SKILL_THIRD"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "BONUSPROFICIENCIES_SKILL_THIRD"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting"

new entry "BONUSPROFICIENCIES_SKILL_FOURTH"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "BONUSPROFICIENCIES_SKILL_FOURTH"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting"

new entry "BONUSPROFICIENCIES_SKILL_FIFTH"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "BONUSPROFICIENCIES_SKILL_FIFTH"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting"

new entry "BONUSPROFICIENCIES_ACROBATICS"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "Bonus Proficiencies: Acrobatics"
data "StackId" "BONUSPROFICIENCIES_ACROBATICS"
data "OnApplyFunctors" "IF(HasStatus('BONUSPROFICIENCIES_SKILL_FOURTH',context.Source)):ApplyStatus(BONUSPROFICIENCIES_SKILL_FIFTH,100,-1);IF(HasStatus('BONUSPROFICIENCIES_SKILL_THIRD',context.Source)):ApplyStatus(BONUSPROFICIENCIES_SKILL_FOURTH,100,-1);IF(HasStatus('BONUSPROFICIENCIES_SKILL_SECOND',context.Source)):ApplyStatus(BONUSPROFICIENCIES_SKILL_THIRD,100,-1);IF(HasStatus('BONUSPROFICIENCIES_SKILL_FIRST',context.Source)):ApplyStatus(BONUSPROFICIENCIES_SKILL_SECOND,100,-1);IF(not HasStatus('BONUSPROFICIENCIES_SKILL_FIRST',context.Source) and not HasStatus('BONUSPROFICIENCIES_SKILL_SECOND',context.Source) and not HasStatus('BONUSPROFICIENCIES_SKILL_THIRD',context.Source) and not HasStatus('BONUSPROFICIENCIES_SKILL_FOURTH',context.Source) and not HasStatus('BONUSPROFICIENCIES_SKILL_FIFTH',context.Source)):ApplyStatus(BONUSPROFICIENCIES_SKILL_FIRST,100,-1)"
data "Boosts" "ProficiencyBonus(Skill,Acrobatics)"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting"

new entry "BONUSPROFICIENCIES_ANIMALHANDLING"
type "StatusData"
data "StatusType" "BOOST"
using "BONUSPROFICIENCIES_ACROBATICS"
data "DisplayName" "Bonus Proficiencies: Animal Handling"
data "StackId" "BONUSPROFICIENCIES_ANIMALHANDLING"
data "Boosts" "ProficiencyBonus(Skill,AnimalHandling)"

new entry "BONUSPROFICIENCIES_ARCANA"
type "StatusData"
data "StatusType" "BOOST"
using "BONUSPROFICIENCIES_ACROBATICS"
data "DisplayName" "Bonus Proficiencies: Arcana"
data "StackId" "BONUSPROFICIENCIES_ARCANA"
data "Boosts" "ProficiencyBonus(Skill,Arcana)"

new entry "BONUSPROFICIENCIES_ATHLETICS"
type "StatusData"
data "StatusType" "BOOST"
using "BONUSPROFICIENCIES_ACROBATICS"
data "DisplayName" "Bonus Proficiencies: Athletics"
data "StackId" "BONUSPROFICIENCIES_ATHLETICS"
data "Boosts" "ProficiencyBonus(Skill,Athletics)"

new entry "BONUSPROFICIENCIES_DECEPTION"
type "StatusData"
data "StatusType" "BOOST"
using "BONUSPROFICIENCIES_ACROBATICS"
data "DisplayName" "Bonus Proficiencies: Deception"
data "StackId" "BONUSPROFICIENCIES_DECEPTION"
data "Boosts" "ProficiencyBonus(Skill,Deception)"

new entry "BONUSPROFICIENCIES_HISTORY"
type "StatusData"
data "StatusType" "BOOST"
using "BONUSPROFICIENCIES_ACROBATICS"
data "DisplayName" "Bonus Proficiencies: History"
data "StackId" "BONUSPROFICIENCIES_HISTORY"
data "Boosts" "ProficiencyBonus(Skill,History)"

new entry "BONUSPROFICIENCIES_INSIGHT"
type "StatusData"
data "StatusType" "BOOST"
using "BONUSPROFICIENCIES_ACROBATICS"
data "DisplayName" "Bonus Proficiencies: Insight"
data "StackId" "BONUSPROFICIENCIES_INSIGHT"
data "Boosts" "ProficiencyBonus(Skill,Insight)"

new entry "BONUSPROFICIENCIES_INTIMIDATION"
type "StatusData"
data "StatusType" "BOOST"
using "BONUSPROFICIENCIES_ACROBATICS"
data "DisplayName" "Bonus Proficiencies: Intimidation"
data "StackId" "BONUSPROFICIENCIES_INTIMIDATION"
data "Boosts" "ProficiencyBonus(Skill,Intimidation)"

new entry "BONUSPROFICIENCIES_INVESTIGATION"
type "StatusData"
data "StatusType" "BOOST"
using "BONUSPROFICIENCIES_ACROBATICS"
data "DisplayName" "Bonus Proficiencies: Investigation"
data "StackId" "BONUSPROFICIENCIES_INVESTIGATION"
data "Boosts" "ProficiencyBonus(Skill,Investigation)"

new entry "BONUSPROFICIENCIES_MEDICINE"
type "StatusData"
data "StatusType" "BOOST"
using "BONUSPROFICIENCIES_ACROBATICS"
data "DisplayName" "Bonus Proficiencies: Medicine"
data "StackId" "BONUSPROFICIENCIES_MEDICINE"
data "Boosts" "ProficiencyBonus(Skill,Medicine)"

new entry "BONUSPROFICIENCIES_NATURE"
type "StatusData"
data "StatusType" "BOOST"
using "BONUSPROFICIENCIES_ACROBATICS"
data "DisplayName" "Bonus Proficiencies: Nature"
data "StackId" "BONUSPROFICIENCIES_NATURE"
data "Boosts" "ProficiencyBonus(Skill,Nature)"

new entry "BONUSPROFICIENCIES_PERCEPTION"
type "StatusData"
data "StatusType" "BOOST"
using "BONUSPROFICIENCIES_ACROBATICS"
data "DisplayName" "Bonus Proficiencies: Perception"
data "StackId" "BONUSPROFICIENCIES_PERCEPTION"
data "Boosts" "ProficiencyBonus(Skill,Perception)"

new entry "BONUSPROFICIENCIES_PERFORMANCE"
type "StatusData"
data "StatusType" "BOOST"
using "BONUSPROFICIENCIES_ACROBATICS"
data "DisplayName" "Bonus Proficiencies: Performance"
data "StackId" "BONUSPROFICIENCIES_PERFORMANCE"
data "Boosts" "ProficiencyBonus(Skill,Performance)"

new entry "BONUSPROFICIENCIES_PERSUASION"
type "StatusData"
data "StatusType" "BOOST"
using "BONUSPROFICIENCIES_ACROBATICS"
data "DisplayName" "Bonus Proficiencies: Persuasion"
data "StackId" "BONUSPROFICIENCIES_PERSUASION"
data "Boosts" "ProficiencyBonus(Skill,Persuasion)"

new entry "BONUSPROFICIENCIES_SLEIGHTOFHAND"
type "StatusData"
data "StatusType" "BOOST"
using "BONUSPROFICIENCIES_ACROBATICS"
data "DisplayName" "Bonus Proficiencies: Sleight of Hand"
data "StackId" "BONUSPROFICIENCIES_SLEIGHTOFHAND"
data "Boosts" "ProficiencyBonus(Skill,SleightOfHand)"

new entry "BONUSPROFICIENCIES_STEALTH"
type "StatusData"
data "StatusType" "BOOST"
using "BONUSPROFICIENCIES_ACROBATICS"
data "DisplayName" "Bonus Proficiencies: Stealth"
data "StackId" "BONUSPROFICIENCIES_STEALTH"
data "Boosts" "ProficiencyBonus(Skill,Stealth)"

new entry "BONUSPROFICIENCIES_SURVIVAL"
type "StatusData"
data "StatusType" "BOOST"
using "BONUSPROFICIENCIES_ACROBATICS"
data "DisplayName" "Bonus Proficiencies: Survival"
data "StackId" "BONUSPROFICIENCIES_SURVIVAL"
data "Boosts" "ProficiencyBonus(Skill,Survival)"

new entry "MARTIALROLE_ATTACKER"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "MARTIALROLE"
data "Passives" "MartialRole_Attacker"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting"

new entry "MARTIALROLE_DEFENDER"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "MARTIALROLE"
data "Passives" "MartialRole_Defender"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting"

new entry "MARTIAL_ROLE_DEFENDER_TOGGLE"
type "StatusData"
data "StatusType" "BOOST"
data "TickFunctors" "ApplyStatus(MARTIAL_ROLE_DEFENDER_AURA,100,1)"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator"
data "OnApplyFunctors" "ApplyStatus(MARTIAL_ROLE_DEFENDER_AURA,100,1)"
data "OnRemoveFunctors" "RemoveStatus(MARTIAL_ROLE_DEFENDER_AURA)"

new entry "MARTIAL_ROLE_DEFENDER_AURA"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "MARTIAL_ROLE_DEFENDER_AURA"
data "AuraRadius" "2"
data "AuraStatuses" "IF(Ally() and HasActionResource('ReactionActionPoint',1,0, false,context.Source)):ApplyStatus(MARTIAL_ROLE_DEFENDER,100,-1)"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator"

new entry "MARTIAL_ROLE_DEFENDER"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "Martial Role: Defender"
data "Description" "Shared_Status_BOOST_FIGHTING_STYLE_PROTECTION_Description"
data "Icon" "PassiveAction_FightingStyle_Protection"
data "StackId" "MARTIAL_ROLE_DEFENDER"
data "Boosts" "Disadvantage(AttackTarget)"
data "RemoveEvents" "OnAttacked"
data "StatusPropertyFlags" "DisableCombatlog;DisableOverhead"

new entry "ASI_BLOCK"
type "StatusData"
data "StatusType" "BOOST"
data "StatusPropertyFlags" "DisableCombatlog;DisableOverhead;DisablePortraitIndicator;IgnoreResting"

new entry "ASI_BLOCK_2"
type "StatusData"
data "StatusType" "BOOST"
using "ASI_BLOCK"

new entry "ASI_BLOCK_3"
type "StatusData"
data "StatusType" "BOOST"
using "ASI_BLOCK"

new entry "ASI_BLOCK_4"
type "StatusData"
data "StatusType" "BOOST"
using "ASI_BLOCK"

new entry "ASI_BLOCK_5"
type "StatusData"
data "StatusType" "BOOST"
using "ASI_BLOCK"

new entry "ASI_BLOCK_6"
type "StatusData"
data "StatusType" "BOOST"
using "ASI_BLOCK"

new entry "ASI_STRENGTH"
type "StatusData"
data "StatusType" "BOOST"
data "Passives" "AbilityImprovement_Strength"
data "StatusPropertyFlags" "DisableCombatlog;DisableOverhead;DisablePortraitIndicator;IgnoreResting"

new entry "ASI_DEXTERITY"
type "StatusData"
data "StatusType" "BOOST"
data "Passives" "AbilityImprovement_Dexterity"
data "StatusPropertyFlags" "DisableCombatlog;DisableOverhead;DisablePortraitIndicator;IgnoreResting"

new entry "ASI_CONSTITUTION"
type "StatusData"
data "StatusType" "BOOST"
data "Passives" "AbilityImprovement_Constitution"
data "StatusPropertyFlags" "DisableCombatlog;DisableOverhead;DisablePortraitIndicator;IgnoreResting"

new entry "ASI_INTELLIGENCE"
type "StatusData"
data "StatusType" "BOOST"
data "Passives" "AbilityImprovement_Intelligence"
data "StatusPropertyFlags" "DisableCombatlog;DisableOverhead;DisablePortraitIndicator;IgnoreResting"

new entry "ASI_WISDOM"
type "StatusData"
data "StatusType" "BOOST"
data "Passives" "AbilityImprovement_Wisdom"
data "StatusPropertyFlags" "DisableCombatlog;DisableOverhead;DisablePortraitIndicator;IgnoreResting"

new entry "ASI_CHARISMA"
type "StatusData"
data "StatusType" "BOOST"
data "Passives" "AbilityImprovement_Charisma"
data "StatusPropertyFlags" "DisableCombatlog;DisableOverhead;DisablePortraitIndicator;IgnoreResting"

new entry "ASI_1"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "1 ASI"
data "Description" "Increased ability scores by 1."
data "Icon" "PassiveFeature_Generic"
data "StatusPropertyFlags" "IgnoreResting;DisableOverhead;DisableCombatlog"
data "StackId" "ASI"
data "StackPriority" "1"
data "StackType" "Overwrite"

new entry "ASI_2"
type "StatusData"
data "StatusType" "BOOST"
using "ASI_1"
data "DisplayName" "2 ASI"
data "Description" "Increased ability scores by 2."
data "StackPriority" "2"
data "OnApplyFunctors" "ApplyStatus(ASI_BLOCK,100,-1)"

new entry "ASI_3"
type "StatusData"
data "StatusType" "BOOST"
using "ASI_1"
data "DisplayName" "3 ASI"
data "Description" "Increased ability scores by 3."
data "StackPriority" "3"

new entry "ASI_4"
type "StatusData"
data "StatusType" "BOOST"
using "ASI_1"
data "DisplayName" "4 ASI"
data "Description" "Increased ability scores by 4."
data "StackPriority" "4"
data "OnApplyFunctors" "ApplyStatus(ASI_BLOCK_2,100,-1)"

new entry "ASI_5"
type "StatusData"
data "StatusType" "BOOST"
using "ASI_1"
data "DisplayName" "5 ASI"
data "Description" "Increased ability scores by 5."
data "StackPriority" "5"

new entry "ASI_6"
type "StatusData"
data "StatusType" "BOOST"
using "ASI_1"
data "DisplayName" "6 ASI"
data "Description" "Increased ability scores by 6."
data "StackPriority" "6"
data "OnApplyFunctors" "ApplyStatus(ASI_BLOCK_3,100,-1)"

new entry "ASI_7"
type "StatusData"
data "StatusType" "BOOST"
using "ASI_1"
data "DisplayName" "7 ASI"
data "Description" "Increased ability scores by 7."
data "StackPriority" "7"

new entry "ASI_8"
type "StatusData"
data "StatusType" "BOOST"
using "ASI_1"
data "DisplayName" "8 ASI"
data "Description" "Increased ability scores by 8."
data "StackPriority" "8"
data "OnApplyFunctors" "ApplyStatus(ASI_BLOCK_4,100,-1)"

new entry "ASI_9"
type "StatusData"
data "StatusType" "BOOST"
using "ASI_1"
data "DisplayName" "9 ASI"
data "Description" "Increased ability scores by 9."
data "StackPriority" "9"

new entry "ASI_10"
type "StatusData"
data "StatusType" "BOOST"
using "ASI_1"
data "DisplayName" "10 ASI"
data "Description" "Increased ability scores by 10."
data "StackPriority" "10"
data "OnApplyFunctors" "ApplyStatus(ASI_BLOCK_5,100,-1)"

new entry "ASI_11"
type "StatusData"
data "StatusType" "BOOST"
using "ASI_1"
data "DisplayName" "11 ASI"
data "Description" "Increased ability scores by 11."
data "StackPriority" "11"

new entry "ASI_12"
type "StatusData"
data "StatusType" "BOOST"
using "ASI_1"
data "DisplayName" "12 ASI"
data "Description" "Increased ability scores by 12."
data "StackPriority" "12"
data "OnApplyFunctors" "ApplyStatus(ASI_BLOCK_6,100,-1)"

new entry "EXPERTISE_FIRST"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "EXPERTISE_FIRST"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting"

new entry "EXPERTISE_SECOND"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "EXPERTISE_SECOND"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting"

new entry "EXPERTISE_ACROBATICS"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "Expertise: Acrobatics"
data "StackId" "EXPERTISE_ACROBATICS"
data "Boosts" "ExpertiseBonus(Acrobatics)"
data "OnApplyFunctors" "IF(HasStatus('EXPERTISE_FIRST',context.Source)):ApplyStatus(EXPERTISE_SECOND,100,-1);IF(not HasStatus('EXPERTISE_FIRST',context.Source) and not HasStatus('EXPERTISE_SECOND',context.Source)):ApplyStatus(EXPERTISE_FIRST,100,-1)"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting"

new entry "EXPERTISE_ANIMALHANDLING"
type "StatusData"
data "StatusType" "BOOST"
using "EXPERTISE_ACROBATICS"
data "DisplayName" "Expertise: Animal Handling"
data "StackId" "EXPERTISE_ANIMALHANDLING"
data "Boosts" "ExpertiseBonus(AnimalHandling)"

new entry "EXPERTISE_ATHLETICS"
type "StatusData"
data "StatusType" "BOOST"
using "EXPERTISE_ACROBATICS"
data "DisplayName" "Expertise: Athletics"
data "StackId" "EXPERTISE_ATHLETICS"
data "Boosts" "ExpertiseBonus(Athletics)"

new entry "EXPERTISE_ARCANA"
type "StatusData"
data "StatusType" "BOOST"
using "EXPERTISE_ACROBATICS"
data "DisplayName" "Expertise: Arcana"
data "StackId" "EXPERTISE_ARCANA"
data "Boosts" "ExpertiseBonus(Arcana)"

new entry "EXPERTISE_DECEPTION"
type "StatusData"
data "StatusType" "BOOST"
using "EXPERTISE_ACROBATICS"
data "DisplayName" "Expertise: Deception"
data "StackId" "EXPERTISE_DECEPTION"
data "Boosts" "ExpertiseBonus(Deception)"

new entry "EXPERTISE_HISTORY"
type "StatusData"
data "StatusType" "BOOST"
using "EXPERTISE_ACROBATICS"
data "DisplayName" "Expertise: History"
data "StackId" "EXPERTISE_HISTORY"
data "Boosts" "ExpertiseBonus(History)"

new entry "EXPERTISE_INSIGHT"
type "StatusData"
data "StatusType" "BOOST"
using "EXPERTISE_ACROBATICS"
data "DisplayName" "Expertise: Insight"
data "StackId" "EXPERTISE_INSIGHT"
data "Boosts" "ExpertiseBonus(Insight)"

new entry "EXPERTISE_INTIMIDATION"
type "StatusData"
data "StatusType" "BOOST"
using "EXPERTISE_ACROBATICS"
data "DisplayName" "Expertise: Intimidation"
data "StackId" "EXPERTISE_INTIMIDATION"
data "Boosts" "ExpertiseBonus(Intimidation)"

new entry "EXPERTISE_INVESTIGATION"
type "StatusData"
data "StatusType" "BOOST"
using "EXPERTISE_ACROBATICS"
data "DisplayName" "Expertise: Investigation"
data "StackId" "EXPERTISE_INVESTIGATION"
data "Boosts" "ExpertiseBonus(Investigation)"

new entry "EXPERTISE_MEDICINE"
type "StatusData"
data "StatusType" "BOOST"
using "EXPERTISE_ACROBATICS"
data "DisplayName" "Expertise: Medicine"
data "StackId" "EXPERTISE_MEDICINE"
data "Boosts" "ExpertiseBonus(Medicine)"

new entry "EXPERTISE_NATURE"
type "StatusData"
data "StatusType" "BOOST"
using "EXPERTISE_ACROBATICS"
data "DisplayName" "Expertise: Nature"
data "StackId" "EXPERTISE_NATURE"
data "Boosts" "ExpertiseBonus(Nature)"

new entry "EXPERTISE_PERCEPTION"
type "StatusData"
data "StatusType" "BOOST"
using "EXPERTISE_ACROBATICS"
data "DisplayName" "Expertise: Perception"
data "StackId" "EXPERTISE_PERCEPTION"
data "Boosts" "ExpertiseBonus(Perception)"

new entry "EXPERTISE_PERFORMANCE"
type "StatusData"
data "StatusType" "BOOST"
using "EXPERTISE_ACROBATICS"
data "DisplayName" "Expertise: Performance"
data "StackId" "EXPERTISE_PERFORMANCE"
data "Boosts" "ExpertiseBonus(Performance)"

new entry "EXPERTISE_PERSUASION"
type "StatusData"
data "StatusType" "BOOST"
using "EXPERTISE_ACROBATICS"
data "DisplayName" "Expertise: Persuasion"
data "StackId" "EXPERTISE_PERSUASION"
data "Boosts" "ExpertiseBonus(Persuasion)"

new entry "EXPERTISE_RELIGION"
type "StatusData"
data "StatusType" "BOOST"
using "EXPERTISE_ACROBATICS"
data "DisplayName" "Expertise: Religion"
data "StackId" "EXPERTISE_RELIGION"
data "Boosts" "ExpertiseBonus(Religion)"

new entry "EXPERTISE_SLEIGHTOFHAND"
type "StatusData"
data "StatusType" "BOOST"
using "EXPERTISE_ACROBATICS"
data "DisplayName" "Expertise: Sleight of Hand"
data "StackId" "EXPERTISE_SLEIGHTOFHAND"
data "Boosts" "ExpertiseBonus(SleightOfHand)"

new entry "EXPERTISE_STEALTH"
type "StatusData"
data "StatusType" "BOOST"
using "EXPERTISE_ACROBATICS"
data "DisplayName" "Expertise: Stealth"
data "StackId" "EXPERTISE_STEALTH"
data "Boosts" "ExpertiseBonus(Stealth)"

new entry "EXPERTISE_SURVIVAL"
type "StatusData"
data "StatusType" "BOOST"
using "EXPERTISE_ACROBATICS"
data "DisplayName" "Expertise: Survival"
data "StackId" "EXPERTISE_SURVIVAL"
data "Boosts" "ExpertiseBonus(Survival)"

new entry "SHARPMIND_FIRST"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "SHARPMIND_FIRST"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting"

new entry "SHARPMIND_INTELLIGENCE"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "Sharp Mind: Intelligence"
data "StackId" "SHARPMIND_INTELLIGENCE"
data "OnApplyFunctors" "ApplyStatus(SHARPMIND_FIRST,100,-1)"
data "Boosts" "ProficiencyBonus(SavingThrow,Intelligence)"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting"

new entry "SHARPMIND_WISDOM"
type "StatusData"
data "StatusType" "BOOST"
using "SHARPMIND_INTELLIGENCE"
data "DisplayName" "Sharp Mind: Wisdom"
data "StackId" "SHARPMIND_WISDOM"
data "Boosts" "ProficiencyBonus(SavingThrow,Wisdom)"

new entry "SHARPMIND_CHARISMA"
type "StatusData"
data "StatusType" "BOOST"
using "SHARPMIND_INTELLIGENCE"
data "DisplayName" "Sharp Mind: Charisma"
data "StackId" "SHARPMIND_CHARISMA"
data "Boosts" "ProficiencyBonus(SavingThrow,Charisma)"

new entry "HELPFUL"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "Helpful"
data "Description" "Can be used as a bonus action."
data "StackId" "HELPFUL"
data "Boosts" "UnlockSpellVariant(SpellId('Target_Help'),ModifyUseCosts(Replace,BonusActionPoint,1,0,ActionPoint),ModifyIconGlow(),ModifyTooltipDescription())"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting"